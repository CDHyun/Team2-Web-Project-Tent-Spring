<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springlec.base.dao.PurchaseDao">

	<select id="purchaseInfoDao" resultType="com.springlec.base.model.Purchase">
		SELECT * 
		FROM user u, userAddress ua 
		WHERE u.uid = ua.uid and u.uid = #{uid}
	</select>

	<insert id="purchaseInsert">
		INSERT INTO purchase (uid, pCode, pcInsertDate, pcQty, pcDM, pColor, pcPay)
		VALUES (#{uid}, #{pCode}, now(), #{pcQty}, #{pcDM}, #{pColor}, #{pcPay})
	</insert>

	<select id="purchaseCheck" resultType="com.springlec.base.model.Purchase">
		SELECT p.pName, p.pPrice, pf.pfRealName, pf.pfHoverRealName
		FROM user u, purchase pc
		WHERE u.uid = pc.uid and u.uid = #{uid}
	</select>

	<select id="purchaseComplete" resultType="com.springlec.base.model.Purchase">
		SELECT u.uid as uid, pc.pcStatus as pcStatus
		FROM user u, purchase pc
		WHERE u.uid = pc.uid and u.uid = #{uid}
	</select>

	<select id="purchaseList" resultType="com.springlec.base.model.Purchase">
		SELECT pc.pcNo, p.pCode, p.pName, p.pPrice, pc.pcQty, pc.pcStatus, pc.pcInsertDate, u.uPhone, pf.pfRealName, pf.pfHoverRealName, pcPay
		FROM product p, user u, purchase pc, productfile pf
		WHERE pc.pCode = p.pCode AND pf.pCode = p.pCode AND u.uid = pc.uid AND u.uid = #{uid}
		ORDER BY pc.pcInsertDate DESC
		LIMIT 0, 7
	</select>
	
	<select id="getProductInfo" resultType="com.springlec.base.model.Purchase">
		SELECT * FROM product p, productFile pf WHERE p.pCode = pf.pCode AND p.pCode = #{pCode}
	</select>
	
	<select id="purchaseDetailList" resultType="com.springlec.base.model.Purchase">
		SELECT pc.pcNo, pc.pcinsertDate, p.pName, u.uPhone, pf.pfRealName, pc.pcPay, pc.pcQty, p.pPrice, pc.pcDM, u.uName
		FROM product p, purchase pc, productfile pf, user u
		WHERE p.pCode = pc.pCode AND p.pCode = pf.pCode AND u.uid = #{uid} AND pcNo = #{pcNo}
	</select>
	

	<update id="modifyaddress">
		UPDATE userAddress 
		SET uaAddress = #{uaAddress}, uaDetailAddress = #{uaDetailAddress}, uaZipcode = #{uaZipcode}, uaContent = #{uaContent}
		WHERE uid = #{uid} AND uaNo = #{uaNo}
	</update>

	
	
 	<!-- 주문 취소 -->
	<!-- <select id="getPurchaseDetails" resultType="com.springlec.base.model.Purchase">
		SELECT pcQty, pColor, pCode
		FROM purchase
		WHERE pcNo = #{pcNo}
	</select>
	 -->
	
	<!-- <update id="cancelPurchase">
		UPDATE purchase 
		SET pcStatus = -1
		WHERE pcNo = #{pcNo}
	</update>   -->
	
	
	<!-- 주문 취소 후 주문상태 삭제로 변경-->
	<update id="purchaseDelete">
		UPDATE purchase 
		SET pcDeleteDate = now(), pcDeleted = 1 , pcStatus = -1
		WHERE pcNo = #{pcNo}
	</update>
	
	<!-- 재고 수량 증가 -->
	<update id="increaseStock">
		UPDATE productOption
		SET pStock = pStock + #{pStock}
		WHERE pCode = #{pCode} and pColor = #{pColor}
	</update>
	
	<!-- 재고 수량 차감 -->
	<update id="decreaseStock">
		UPDATE productOption
		SET pStock = pStock - #{pStock}
		WHERE pCode = #{pCode} and pColor = #{pColor}
	</update>
	
	
	<!-- 페이징 위한 카운트 -->
	<select id="getProductCount" resultType="com.springlec.base.model.Purchase">
		SELECT count(*) 
		FROM product p, user u, purchase pc, productfile pf
		WHERE pc.pCode = p.pCode AND pf.pCode = p.pCode AND u.uid = pc.uid AND pc.pcDeleted = 0 AND u.uid = #{uid}
	</select> 
	
	<insert id="cartInsertAction1">
		INSERT INTO purchase (uid, pcQty, pColor, pCode,pcInsertDate)
		SELECT #{uid}, c.cQty, c.pColor, c.pCode,now()
		FROM cart c, productoption po, product p
		WHERE uid = #{uid} and cNo=#{cNo} and c.pColor = po.pColor and p.pCode = c.pCode and po.pCode = c.pCode
	</insert>
	
	<update id="cartInsertAction2">
		update purchase set pcDM=#{pcDM}, pcPay=#{pcPay} ORDER BY pcNo DESC LIMIT #{count}
	</update>
	
	<delete id="cartInsertAction3">
		delete from cart where cNo = #{cNo}
	</delete>
	
	
</mapper>
