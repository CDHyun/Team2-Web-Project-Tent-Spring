<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springlec.base.dao.UserDao">

	<!-- 회원가입(user 테이블) -->
	<insert id="signUp1">
		INSERT INTO user(uid, uPassword, uName, uNickName, uPhone, uEmail, uGender, uBirthday, uInsertDate)
		VALUES(#{uid}, #{uPassword}, #{uName}, #{uNickName}, #{uPhone}, #{uEmail}, #{uGender}, #{uBirthday}, now())
	</insert>
	
	<!-- 회원가입(userAddress 테이블) -->
	<insert id="signUp2">
		INSERT INTO userAddress(uaNo, uid, uaAddress, uaDetailAddress, uaZipcode)
		VALUES(1, #{uid}, #{uaAddress}, #{uaDetailAddress}, #{uaZipcode})
	</insert>
	
	<!-- 아이디 중복 확인 -->
	<select id="checkDuplicateId" resultType="int">
		SELECT count(*) FROM user WHERE uid = #{uid}
	</select>
	
	<!-- 아이디 탈퇴 여부 확인 -->
	<select id="statusCheck" resultType="int">
		SELECT uSecessionStatus FROM user WHERE uid = #{uid}
	</select>
	
	<!-- 아이디 존재 여부 확인 -->
	<select id="existCheck" resultType="int">
		SELECT count(*) FROM user WHERE uid = #{uid}
	</select>
	
	<!-- 아이디, 비밀번호 일치 여부 확인 -->
	<select id="accordCheck" resultType="int">
		SELECT count(*) FROM user WHERE uid = #{uid} AND uPassword = #{uPassword}
	</select>
	
	<!-- 로그인하는 유저의 닉네임 가져오기 -->
	<select id="getUserNickname" resultType="String">
		SELECT uNickName FROM user WHERE uid = #{uid}
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="userInfo" resultType="com.springlec.base.model.User">
		SELECT * FROM user u, userAddress ua WHERE u.uid = ua.uid AND u.uid = #{uid} AND ua.uaNo = 1
	</select>
	
	<!-- 핸드폰 번호 변경 -->
	<update id="modify_phone">
		UPDATE user SET uPhone = #{uPhone}, uUpdateDate = now() WHERE uid = #{uid}
	</update>
	
	<!-- 이름 변경 -->
	<update id="modify_name">
		UPDATE user SET uName = #{uName}, uUpdateDate = now() WHERE uid = #{uid}
	</update>
	
	<!-- 이메일 변경 -->
	<update id="modify_email">
		UPDATE user SET uEmail = #{uEmail}, uUpdateDate = now() WHERE uid = #{uid}
	</update>
	
	<!-- 닉네임 변경 -->
	<update id="modify_nickname">
		UPDATE user SET uNickName = #{uNickName}, uUpdateDate = now() WHERE uid = #{uid}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="delete_account">
		UPDATE user SET uSecessionStatus = 1, uDeleteDate = now() WHERE uid = #{uid}
	</update>
	
	<!-- 배송지 조회 -->
	<select id="my_address" resultType="com.springlec.base.model.User">
		SELECT * FROM user u, userAddress ua WHERE u.uid = ua.uid AND u.uid = #{uid}
	</select>
	
	<!-- 가장 높은 uaNo 조회 -->
	<select id="getUaNo" resultType="int">
		SELECT MAX(uaNo) + 1 FROM userAddress WHERE uid = #{uid}
	</select>
	
	<!-- 배송지 추가 -->
	<insert id="add_address">
	    INSERT INTO userAddress (uid, uaNo, uaAddress, uaDetailAddress, uaZipcode, uaContent)
	    VALUES (#{uid}, #{uaNo}, #{uaAddress}, #{uaDetailAddress}, #{uaZipcode}, #{uaContent})
	</insert>
	
	<!-- 배송지 수정 -->
	<update id="modify_address">
		UPDATE userAddress SET uaAddress = #{uaAddress}, uaDetailAddress = #{uaDetailAddress}, uaZipcode = #{uaZipcode}, uaContent = #{uaContent}
		WHERE uid = #{uid} AND uaNo = #{uaNo}
	</update>
	
	<!-- 배송지 삭제 -->
	<delete id="delete_address">
		DELETE FROM userAddress WHERE uid = #{uid} AND uaNo = #{uaNo}
	</delete>
	
	<!-- 비밀번호 변경 -->
	<update id="change_password">
		UPDATE user SET uPassword = #{uPassword} WHERE uid = #{uid}
	</update>
	
	<!-- 관리자 로그인 -->
	<select id="admin_login" resultType="int">
		SELECT count(*) FROM admin WHERE aid = #{aid} and aPassword = #{aPassword}
	</select>
	
	
	
	
	
</mapper>